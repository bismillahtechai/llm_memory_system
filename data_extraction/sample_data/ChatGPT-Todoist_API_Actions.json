{"id":"67838abe-f730-8002-b53e-34cf39c4ac7f","title":"Todoist API Actions","create_time":1736673983.401564,"update_time":1736674267.150534,"mapping":{"aaa14b13-4214-43dd-a689-b50b9e01012a":{"id":"aaa14b13-4214-43dd-a689-b50b9e01012a","message":null,"parent":null,"children":["803f400e-6a81-4bc5-818e-c06541b3d675"]},"803f400e-6a81-4bc5-818e-c06541b3d675":{"id":"803f400e-6a81-4bc5-818e-c06541b3d675","message":{"id":"803f400e-6a81-4bc5-818e-c06541b3d675","author":{"role":"system","name":null,"metadata":{}},"create_time":null,"update_time":null,"content":{"content_type":"text","parts":[""]},"status":"finished_successfully","end_turn":true,"weight":0,"metadata":{"is_visually_hidden_from_conversation":true},"recipient":"all","channel":null},"parent":"aaa14b13-4214-43dd-a689-b50b9e01012a","children":["7d3b4d9c-7c01-459a-aad1-21825784906c"]},"7d3b4d9c-7c01-459a-aad1-21825784906c":{"id":"7d3b4d9c-7c01-459a-aad1-21825784906c","message":{"id":"7d3b4d9c-7c01-459a-aad1-21825784906c","author":{"role":"system","name":null,"metadata":{}},"create_time":1736673983.4009807,"update_time":null,"content":{"content_type":"text","parts":[""]},"status":"finished_successfully","end_turn":null,"weight":1,"metadata":{"attachments":[],"is_visually_hidden_from_conversation":true},"recipient":"all","channel":null},"parent":"803f400e-6a81-4bc5-818e-c06541b3d675","children":["aaa2e432-0210-479c-bbb1-06a59e4ad88a"]},"aaa2e432-0210-479c-bbb1-06a59e4ad88a":{"id":"aaa2e432-0210-479c-bbb1-06a59e4ad88a","message":{"id":"aaa2e432-0210-479c-bbb1-06a59e4ad88a","author":{"role":"user","name":null,"metadata":{}},"create_time":1736673983.413617,"update_time":null,"content":{"content_type":"text","parts":["List all the available actions that should be availble from this spec:\n\nopenapi: 3.1.0\r\ninfo:\r\n  title: Todoist REST API\r\n  description: |-\r\n    This is the official documentation for the Todoist REST API v2, focusing on core resources: Projects,\r\n      Sections, Tasks, Comments, and Labels.\r\n  version: 2.0.0\r\nservers:\r\n  - url: https://api.todoist.com/rest/v2\r\n    description: Main (production) server\r\ncomponents:\r\n  securitySchemes:\r\n    bearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: Use your personal API token in the format 'Bearer {token}' to authenticate requests.\r\n  schemas:\r\n    Project:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          description: Project ID.\r\n        name:\r\n          type: string\r\n          description: Project name.\r\n        color:\r\n          type: string\r\n          description: The color of the project icon. Refer to the name column in the Colors guide for more info.\r\n        parent_id:\r\n          type: string\r\n          nullable: true\r\n          description: ID of parent project (will be null for top-level projects).\r\n        order:\r\n          type: integer\r\n          description: Project position under the same parent (read-only).\r\n        comment_count:\r\n          type: integer\r\n          description: Number of project comments.\r\n        is_shared:\r\n          type: boolean\r\n          description: Whether the project is shared (read-only).\r\n        is_favorite:\r\n          type: boolean\r\n          description: Whether the project is a favorite.\r\n        is_inbox_project:\r\n          type: boolean\r\n          description: Whether the project is the user's Inbox (read-only).\r\n        is_team_inbox:\r\n          type: boolean\r\n          description: Whether the project is the Team Inbox (read-only).\r\n        view_style:\r\n          type: string\r\n          enum:\r\n            - list\r\n            - board\r\n          description: Determines the way the project is displayed within the Todoist clients.\r\n        url:\r\n          type: string\r\n          description: URL to access this project in the Todoist web or mobile applications.\r\n      required:\r\n        - id\r\n        - name\r\n    ProjectCreate:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          description: Name of the project (required).\r\n        parent_id:\r\n          type: string\r\n          nullable: true\r\n          description: Parent project ID.\r\n        color:\r\n          type: string\r\n          description: The color of the project icon.\r\n        is_favorite:\r\n          type: boolean\r\n          description: Whether the project is a favorite.\r\n        view_style:\r\n          type: string\r\n          enum:\r\n            - list\r\n            - board\r\n          description: The view style for the project.\r\n      required:\r\n        - name\r\n    ProjectUpdate:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          description: New name of the project.\r\n        color:\r\n          type: string\r\n          description: The color of the project icon.\r\n        is_favorite:\r\n          type: boolean\r\n          description: Whether the project is a favorite.\r\n        view_style:\r\n          type: string\r\n          enum:\r\n            - list\r\n            - board\r\n          description: The view style for the project.\r\n    Section:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          description: Section ID.\r\n        project_id:\r\n          type: string\r\n          description: Project ID to which the section belongs.\r\n        order:\r\n          type: integer\r\n          description: Position of the section among others in the same project.\r\n        name:\r\n          type: string\r\n          description: Section name.\r\n      required:\r\n        - id\r\n        - project_id\r\n        - name\r\n    SectionCreate:\r\n      type: object\r\n      properties:\r\n        project_id:\r\n          type: string\r\n          description: The project ID this section belongs to (required).\r\n        name:\r\n          type: string\r\n          description: Name of the section (required).\r\n        order:\r\n          type: integer\r\n          description: Optional position among sections.\r\n      required:\r\n        - project_id\r\n        - name\r\n    SectionUpdate:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          description: New name of the section.\r\n    Task:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          description: Task ID.\r\n        project_id:\r\n          type: string\r\n          nullable: true\r\n          description: Taskâ€™s project ID (read-only).\r\n        section_id:\r\n          type: string\r\n          nullable: true\r\n          description: ID of the section this task belongs to (null if none).\r\n        content:\r\n          type: string\r\n          description: Task content.\r\n        description:\r\n          type: string\r\n          description: A description for the task.\r\n        is_completed:\r\n          type: boolean\r\n          description: Whether the task is completed.\r\n        labels:\r\n          type: array\r\n          items:\r\n            type: string\r\n          description: A list of label names.\r\n        priority:\r\n          type: integer\r\n          description: Task priority from 1 (normal) to 4 (urgent).\r\n        order:\r\n          type: integer\r\n          description: Non-zero integer used by clients to sort tasks.\r\n        due:\r\n          type: object\r\n          nullable: true\r\n          description: An object representing the task's due date/time.\r\n        url:\r\n          type: string\r\n          description: URL to access this task in the Todoist web or mobile apps (read-only).\r\n      required:\r\n        - id\r\n        - content\r\n        - is_completed\r\n    TaskCreate:\r\n      type: object\r\n      properties:\r\n        content:\r\n          type: string\r\n          description: Task content (required).\r\n        description:\r\n          type: string\r\n          description: Optional description for the task.\r\n        project_id:\r\n          type: string\r\n          nullable: true\r\n          description: The project ID for the new task.\r\n        section_id:\r\n          type: string\r\n          nullable: true\r\n          description: The section ID for the new task.\r\n        parent_id:\r\n          type: string\r\n          nullable: true\r\n          description: ID of the parent task.\r\n        order:\r\n          type: integer\r\n          description: Sort position of the task in the project or section.\r\n        labels:\r\n          type: array\r\n          items:\r\n            type: string\r\n          description: A list of label names.\r\n        priority:\r\n          type: integer\r\n          description: Task priority from 1 (normal) to 4 (urgent).\r\n        due_string:\r\n          type: string\r\n          description: Human-defined due date.\r\n        due_date:\r\n          type: string\r\n          format: date\r\n          description: Specific due date in YYYY-MM-DD.\r\n        due_datetime:\r\n          type: string\r\n          format: date-time\r\n          description: Specific date and time in RFC3339 format in UTC.\r\n        due_lang:\r\n          type: string\r\n          description: 2-letter code for language (if due_string is not in English).\r\n        assignee_id:\r\n          type: string\r\n          nullable: true\r\n          description: The responsible user ID for a shared task.\r\n        duration:\r\n          type: integer\r\n          nullable: true\r\n          description: A positive integer for the amount of time (in duration_unit).\r\n        duration_unit:\r\n          type: string\r\n          nullable: true\r\n          description: Unit of time for duration, must be 'minute' or 'day'.\r\n      required:\r\n        - content\r\n    TaskUpdate:\r\n      type: object\r\n      properties:\r\n        content:\r\n          type: string\r\n          description: New content for the task.\r\n        description:\r\n          type: string\r\n          description: New description for the task.\r\n        labels:\r\n          type: array\r\n          items:\r\n            type: string\r\n          description: Updated list of label names.\r\n        priority:\r\n          type: integer\r\n          description: Updated task priority.\r\n        due_string:\r\n          type: string\r\n          description: Updated human-defined due date.\r\n        due_date:\r\n          type: string\r\n          format: date\r\n          description: Updated date in YYYY-MM-DD.\r\n        due_datetime:\r\n          type: string\r\n          format: date-time\r\n          description: Updated date and time in RFC3339 format in UTC.\r\n        due_lang:\r\n          type: string\r\n          description: 2-letter code specifying language for due_string.\r\n        assignee_id:\r\n          type: string\r\n          nullable: true\r\n          description: Updated responsible user ID or null to unset.\r\n        duration:\r\n          type: integer\r\n          nullable: true\r\n          description: A positive integer for the amount of time the task requires, or null to unset.\r\n        duration_unit:\r\n          type: string\r\n          nullable: true\r\n          description: Must be 'minute' or 'day' if duration is specified, or null to unset.\r\n    Comment:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          description: Comment ID.\r\n        task_id:\r\n          type: string\r\n          nullable: true\r\n          description: The comment's task ID (null if belongs to project).\r\n        project_id:\r\n          type: string\r\n          nullable: true\r\n          description: The comment's project ID (null if belongs to task).\r\n        posted_at:\r\n          type: string\r\n          format: date-time\r\n          description: Date/time when comment was added (UTC, RFC3339).\r\n        content:\r\n          type: string\r\n          description: Comment content (may contain markdown).\r\n        attachment:\r\n          type: object\r\n          nullable: true\r\n          description: Optional attachment object (null if none).\r\n      required:\r\n        - id\r\n        - content\r\n    CommentCreate:\r\n      type: object\r\n      properties:\r\n        task_id:\r\n          type: string\r\n          nullable: true\r\n          description: The task ID this comment belongs to (required if project_id not set).\r\n        project_id:\r\n          type: string\r\n          nullable: true\r\n          description: The project ID this comment belongs to (required if task_id not set).\r\n        content:\r\n          type: string\r\n          description: Comment text (required).\r\n        attachment:\r\n          type: object\r\n          nullable: true\r\n          description: Optional attachment object.\r\n      required:\r\n        - content\r\n    CommentUpdate:\r\n      type: object\r\n      properties:\r\n        content:\r\n          type: string\r\n          description: Updated comment text (may contain markdown).\r\n    Label:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          description: Label ID.\r\n        name:\r\n          type: string\r\n          description: Label name.\r\n        color:\r\n          type: string\r\n          description: The color of the label icon.\r\n        order:\r\n          type: integer\r\n          description: Number used by clients to sort list of labels.\r\n        is_favorite:\r\n          type: boolean\r\n          description: Whether the label is a favorite.\r\n      required:\r\n        - id\r\n        - name\r\n    LabelCreate:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          description: Name of the label (required).\r\n        order:\r\n          type: integer\r\n          description: Label order.\r\n        color:\r\n          type: string\r\n          description: The color of the label icon.\r\n        is_favorite:\r\n          type: boolean\r\n          description: Whether the label is a favorite.\r\n      required:\r\n        - name\r\n    LabelUpdate:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          description: New name for the label.\r\n        order:\r\n          type: integer\r\n          description: New label order.\r\n        color:\r\n          type: string\r\n          description: New color of the label icon.\r\n        is_favorite:\r\n          type: boolean\r\n          description: Whether the label is a favorite.\r\n    LabelSharedRename:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          description: Existing shared label name.\r\n        new_name:\r\n          type: string\r\n          description: New name for the shared label.\r\n      required:\r\n        - name\r\n        - new_name\r\n    LabelSharedRemove:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          description: The name of the shared label to remove.\r\n      required:\r\n        - name\r\n    Error:\r\n      type: object\r\n      properties:\r\n        error:\r\n          type: string\r\n          description: Error message.\r\npaths:\r\n  /projects:\r\n    get:\r\n      operationId: getProjects\r\n      summary: Get all projects\r\n      description: Retrieves a list of all user projects.\r\n      security:\r\n        - bearerAuth: []\r\n      responses:\r\n        \"200\":\r\n          description: A JSON array of projects.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/Project\"\r\n              examples:\r\n                example-1:\r\n                  summary: Example response\r\n                  value:\r\n                    - id: \"220474322\"\r\n                      name: Inbox\r\n                      comment_count: 10\r\n                      order: 0\r\n                      color: grey\r\n                      is_shared: false\r\n                      is_favorite: false\r\n                      is_inbox_project: true\r\n                      is_team_inbox: false\r\n                      view_style: list\r\n                      url: https://todoist.com/showProject?id=220474322\r\n                      parent_id: null\r\n        4XX:\r\n          description: Client error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        5XX:\r\n          description: Server error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n    post:\r\n      operationId: createProject\r\n      summary: Create a new project\r\n      description: Creates a new project under the current user.\r\n      security:\r\n        - bearerAuth: []\r\n      requestBody:\r\n        description: Project details to create.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/ProjectCreate\"\r\n            examples:\r\n              example-1:\r\n                summary: Example request\r\n                value:\r\n                  name: Shopping List\r\n                  color: charcoal\r\n      responses:\r\n        \"200\":\r\n          description: Returns the newly created project object.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Project\"\r\n              examples:\r\n                example-1:\r\n                  summary: Example response\r\n                  value:\r\n                    id: \"2203306141\"\r\n                    name: Shopping List\r\n                    comment_count: 0\r\n                    color: charcoal\r\n                    is_shared: false\r\n                    order: 1\r\n                    is_favorite: false\r\n                    is_inbox_project: false\r\n                    is_team_inbox: false\r\n                    view_style: list\r\n                    url: https://todoist.com/showProject?id=2203306141\r\n                    parent_id: null\r\n        4XX:\r\n          description: Client error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        5XX:\r\n          description: Server error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n  /projects/{project_id}:\r\n    get:\r\n      operationId: getProject\r\n      summary: Get a project\r\n      description: Retrieves a specific project by its ID.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - name: project_id\r\n          in: path\r\n          required: true\r\n          description: The project ID.\r\n          schema:\r\n            type: string\r\n      responses:\r\n        \"200\":\r\n          description: Returns a single project object.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Project\"\r\n              examples:\r\n                example-1:\r\n                  summary: Example response\r\n                  value:\r\n                    id: \"2203306141\"\r\n                    name: Shopping List\r\n                    comment_count: 0\r\n                    color: charcoal\r\n                    is_shared: false\r\n                    order: 1\r\n                    is_favorite: false\r\n                    is_inbox_project: false\r\n                    is_team_inbox: false\r\n                    view_style: list\r\n                    url: https://todoist.com/showProject?id=2203306141\r\n                    parent_id: null\r\n        4XX:\r\n          description: Client error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        5XX:\r\n          description: Server error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n    post:\r\n      operationId: updateProject\r\n      summary: Update a project\r\n      description: Updates the details of an existing project.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - name: project_id\r\n          in: path\r\n          required: true\r\n          description: The project ID.\r\n          schema:\r\n            type: string\r\n      requestBody:\r\n        description: Fields to update in the project.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/ProjectUpdate\"\r\n            examples:\r\n              example-1:\r\n                summary: Example request\r\n                value:\r\n                  name: Things To Buy\r\n      responses:\r\n        \"200\":\r\n          description: Returns the updated project object.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Project\"\r\n              examples:\r\n                example-1:\r\n                  summary: Example response\r\n                  value:\r\n                    id: \"2203306141\"\r\n                    name: Things To Buy\r\n                    comment_count: 0\r\n                    color: charcoal\r\n                    is_shared: false\r\n                    order: 1\r\n                    is_favorite: false\r\n                    is_inbox_project: false\r\n                    is_team_inbox: false\r\n                    view_style: list\r\n                    url: https://todoist.com/showProject?id=2203306141\r\n                    parent_id: null\r\n        4XX:\r\n          description: Client error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        5XX:\r\n          description: Server error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n    delete:\r\n      operationId: deleteProject\r\n      summary: Delete a project\r\n      description: Removes a project from the user's list.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - name: project_id\r\n          in: path\r\n          required: true\r\n          description: The project ID.\r\n          schema:\r\n            type: string\r\n      responses:\r\n        \"204\":\r\n          description: The project was deleted successfully (no content).\r\n        4XX:\r\n          description: Client error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        5XX:\r\n          description: Server error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n  /sections:\r\n    get:\r\n      operationId: getSections\r\n      summary: Get all sections\r\n      description: Retrieves a list of sections, optionally filtered by project_id.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - name: project_id\r\n          in: query\r\n          required: false\r\n          description: Filter sections by project ID.\r\n          schema:\r\n            type: string\r\n      responses:\r\n        \"200\":\r\n          description: A JSON array of sections.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/Section\"\r\n              examples:\r\n                example-1:\r\n                  summary: Example response\r\n                  value:\r\n                    - id: \"7025\"\r\n                      project_id: \"2203306141\"\r\n                      order: 1\r\n                      name: Groceries\r\n        4XX:\r\n          description: Client error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        5XX:\r\n          description: Server error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n    post:\r\n      operationId: createSection\r\n      summary: Create a new section\r\n      description: Creates a new section in a specified project.\r\n      security:\r\n        - bearerAuth: []\r\n      requestBody:\r\n        description: Section details to create.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/SectionCreate\"\r\n            examples:\r\n              example-1:\r\n                summary: Example request\r\n                value:\r\n                  project_id: \"2203306141\"\r\n                  name: Groceries\r\n      responses:\r\n        \"200\":\r\n          description: Returns the newly created section.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Section\"\r\n              examples:\r\n                example-1:\r\n                  summary: Example response\r\n                  value:\r\n                    id: \"7025\"\r\n                    project_id: \"2203306141\"\r\n                    order: 1\r\n                    name: Groceries\r\n        4XX:\r\n          description: Client error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        5XX:\r\n          description: Server error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n  /sections/{section_id}:\r\n    get:\r\n      operationId: getSection\r\n      summary: Get a single section\r\n      description: Retrieves a section by its ID.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - name: section_id\r\n          in: path\r\n          required: true\r\n          description: The section ID.\r\n          schema:\r\n            type: string\r\n      responses:\r\n        \"200\":\r\n          description: Returns the requested section object.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Section\"\r\n              examples:\r\n                example-1:\r\n                  summary: Example response\r\n                  value:\r\n                    id: \"7025\"\r\n                    project_id: \"2203306141\"\r\n                    order: 1\r\n                    name: Groceries\r\n        4XX:\r\n          description: Client error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        5XX:\r\n          description: Server error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n    post:\r\n      operationId: updateSection\r\n      summary: Update a section\r\n      description: Updates the details of an existing section.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - name: section_id\r\n          in: path\r\n          required: true\r\n          description: The section ID.\r\n          schema:\r\n            type: string\r\n      requestBody:\r\n        description: Fields to update within the section.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/SectionUpdate\"\r\n            examples:\r\n              example-1:\r\n                summary: Example request\r\n                value:\r\n                  name: Supermarket\r\n      responses:\r\n        \"200\":\r\n          description: Returns the updated section.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Section\"\r\n              examples:\r\n                example-1:\r\n                  summary: Example response\r\n                  value:\r\n                    id: \"7025\"\r\n                    project_id: \"2203306141\"\r\n                    order: 1\r\n                    name: Supermarket\r\n        4XX:\r\n          description: Client error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        5XX:\r\n          description: Server error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n    delete:\r\n      operationId: deleteSection\r\n      summary: Delete a section\r\n      description: Removes a section from the specified project.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - name: section_id\r\n          in: path\r\n          required: true\r\n          description: The section ID.\r\n          schema:\r\n            type: string\r\n      responses:\r\n        \"204\":\r\n          description: The section was deleted successfully (no content).\r\n        4XX:\r\n          description: Client error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        5XX:\r\n          description: Server error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n  /tasks:\r\n    get:\r\n      operationId: getTasks\r\n      summary: Get active tasks\r\n      description: Retrieves all active tasks with optional filters.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - name: project_id\r\n          in: query\r\n          schema:\r\n            type: string\r\n          description: Filter tasks by project ID.\r\n        - name: section_id\r\n          in: query\r\n          schema:\r\n            type: string\r\n          description: Filter tasks by section ID.\r\n        - name: label\r\n          in: query\r\n          schema:\r\n            type: string\r\n          description: Filter tasks by label name.\r\n        - name: filter\r\n          in: query\r\n          schema:\r\n            type: string\r\n          description: Filter tasks by a Todoist filter.\r\n        - name: lang\r\n          in: query\r\n          schema:\r\n            type: string\r\n          description: Language for the filter expression.\r\n        - name: ids\r\n          in: query\r\n          schema:\r\n            type: string\r\n          description: Comma-separated list of task IDs to retrieve.\r\n      responses:\r\n        \"200\":\r\n          description: A JSON array of tasks.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: \"#/components/schemas/Task\"\r\n              examples:\r\n                example-1:\r\n                  summary: Example response\r\n                  value:\r\n                    - id: \"2995104339\"\r\n                      content: Buy Milk\r\n                      description: \"\"\r\n                      project_id: \"2203306141\"\r\n                      section_id: \"7025\"\r\n                      is_completed: false\r\n                      labels:\r\n                        - Food\r\n                        - Shopping\r\n                      priority: 1\r\n                      order: 1\r\n        4XX:\r\n          description: Client error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        5XX:\r\n          description: Server error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n    post:\r\n      operationId: createTask\r\n      summary: Create a new task\r\n      description: Creates a new task in a project or section.\r\n      security:\r\n        - bearerAuth: []\r\n      requestBody:\r\n        description: Task details to create.\r\n        required: true\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: \"#/components/schemas/TaskCreate\"\r\n            examples:\r\n              example-1:\r\n                summary: Example request\r\n                value:\r\n                  content: \"Buy groceries\"\r\n                  project_id: \"2203306141\"\r\n                  priority: 2\r\n                  due_string: \"Tomorrow\"\r\n      responses:\r\n        \"200\":\r\n          description: Returns the newly created task.\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Task\"\r\n              examples:\r\n                example-1:\r\n                  summary: Example response\r\n                  value:\r\n                    id: \"2995104340\"\r\n                    content: Buy groceries\r\n                    description: \"\"\r\n                    project_id: \"2203306141\"\r\n                    section_id: null\r\n                    is_completed: false\r\n                    labels: []\r\n                    priority: 2\r\n                    order: 1\r\n        4XX:\r\n          description: Client error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n        5XX:\r\n          description: Server error\r\n          content:\r\n            application/json:\r\n              schema:\r\n                $ref: \"#/components/schemas/Error\"\r\n  /tasks/{task_id}:\r\n    get:\r\n      operationId: getTask\r\n      summary: Get a task\r\n      description: Retrieves a specific task by its ID.\r\n      security:\r\n        - bearerAuth: []\r\n      parameters:\r\n        - name: task_id\r\n          in: path\r\n          required: true\r\n          description: The task ID.\r\n          schema:\r\n            type: string\r\n      responses:\r\n        \"200\":\r\n          description: Returns the requested task object.\r\n          content:"]},"status":"finished_successfully","end_turn":null,"weight":1,"metadata":{"serialization_metadata":{"custom_symbol_offsets":[]},"request_id":"900c1ac81a3af852-ORD","message_source":null,"timestamp_":"absolute","message_type":null},"recipient":"all","channel":null},"parent":"7d3b4d9c-7c01-459a-aad1-21825784906c","children":["52903341-1064-4520-a3fe-5102553b129e"]},"52903341-1064-4520-a3fe-5102553b129e":{"id":"52903341-1064-4520-a3fe-5102553b129e","message":{"id":"52903341-1064-4520-a3fe-5102553b129e","author":{"role":"assistant","name":null,"metadata":{}},"create_time":1736673993.776266,"update_time":null,"content":{"content_type":"text","parts":["The available actions in this specification represent the operations defined for interacting with the Todoist REST API v2. Here's a list of all the actions grouped by resource type and their corresponding `operationId` values:\n\n### **Projects**\n1. **Get all projects** (`getProjects`): Retrieves a list of all user projects.\n2. **Create a new project** (`createProject`): Creates a new project under the current user.\n3. **Get a specific project** (`getProject`): Retrieves a specific project by its ID.\n4. **Update a project** (`updateProject`): Updates the details of an existing project.\n5. **Delete a project** (`deleteProject`): Deletes a project from the user's list.\n\n---\n\n### **Sections**\n1. **Get all sections** (`getSections`): Retrieves a list of sections, optionally filtered by project ID.\n2. **Create a new section** (`createSection`): Creates a new section in a specified project.\n3. **Get a specific section** (`getSection`): Retrieves a section by its ID.\n4. **Update a section** (`updateSection`): Updates the details of an existing section.\n5. **Delete a section** (`deleteSection`): Deletes a section from the specified project.\n\n---\n\n### **Tasks**\n1. **Get active tasks** (`getTasks`): Retrieves all active tasks, optionally filtered by various criteria such as project ID, section ID, or label.\n2. **Create a new task** (`createTask`): Creates a new task in a project or section.\n3. **Get a specific task** (`getTask`): Retrieves a specific task by its ID.\n4. **Update a task** (`updateTask`): Updates the details of an existing task.\n5. **Delete a task** (`deleteTask`): Deletes a task from the user's list.\n\n---\n\n### **Labels** *(not detailed in the provided paths but can be inferred from components)*\nIf the spec were extended with label-related endpoints, potential actions would include:\n- Get all labels\n- Create a label\n- Update a label\n- Delete a label\n\n---\n\n### **Comments** *(not detailed in the provided paths but can be inferred from components)*\nSimilarly, for comments:\n- Get all comments (project or task)\n- Create a comment\n- Update a comment\n- Delete a comment\n\n---\n\nThis list is based on the explicitly defined paths and operationIds provided. Additional operations could exist if other resources (e.g., labels, comments) had their paths defined."]},"status":"finished_successfully","end_turn":true,"weight":1,"metadata":{"finish_details":{"type":"stop"},"is_complete":true,"citations":[],"content_references":[],"gizmo_id":"g-TYEliDU6A","message_type":null,"model_slug":"gpt-4o","default_model_slug":"o1","parent_id":"aaa2e432-0210-479c-bbb1-06a59e4ad88a","request_id":"900c1ac81a3af852-ORD","timestamp_":"absolute","model_switcher_deny":[{"slug":"text-davinci-002-render-sha","context":"regenerate","reason":"unsupported_gizmo","description":"This GPT is not supported"}]},"recipient":"all","channel":null},"parent":"aaa2e432-0210-479c-bbb1-06a59e4ad88a","children":["aaa2ac5e-6afe-4865-aa96-74e625fee4e0"]},"aaa2ac5e-6afe-4865-aa96-74e625fee4e0":{"id":"aaa2ac5e-6afe-4865-aa96-74e625fee4e0","message":{"id":"aaa2ac5e-6afe-4865-aa96-74e625fee4e0","author":{"role":"user","name":null,"metadata":{}},"create_time":1736674201.068734,"update_time":null,"content":{"content_type":"text","parts":["Rewrite a new spec and include the paths for labels and comments resources that are detailed. "]},"status":"finished_successfully","end_turn":null,"weight":1,"metadata":{"serialization_metadata":{"custom_symbol_offsets":[]},"request_id":"900c2019acc5f852-ORD","message_source":null,"timestamp_":"absolute","message_type":null},"recipient":"all","channel":null},"parent":"52903341-1064-4520-a3fe-5102553b129e","children":["5e003b26-0a61-4386-8fd2-5df211706324"]},"5e003b26-0a61-4386-8fd2-5df211706324":{"id":"5e003b26-0a61-4386-8fd2-5df211706324","message":{"id":"5e003b26-0a61-4386-8fd2-5df211706324","author":{"role":"assistant","name":null,"metadata":{}},"create_time":1736674266.335829,"update_time":null,"content":{"content_type":"text","parts":["Here's the updated OpenAPI 3.1.0 specification with the added paths for **labels** and **comments** resources, based on the provided schemas and inferred operations:\n\n```yaml\nopenapi: 3.1.0\ninfo:\n  title: Todoist REST API\n  description: |\n    Official documentation for the Todoist REST API v2, focusing on managing Projects, Sections, Tasks, Comments, and Labels.\n  version: 2.0.0\nservers:\n  - url: https://api.todoist.com/rest/v2\n    description: Main (production) server\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n      description: Use your personal API token in the format 'Bearer {token}' to authenticate requests.\n  schemas:\n    Project:\n      # Already defined\n    Section:\n      # Already defined\n    Task:\n      # Already defined\n    Comment:\n      # Already defined\n    CommentCreate:\n      # Already defined\n    CommentUpdate:\n      # Already defined\n    Label:\n      # Already defined\n    LabelCreate:\n      # Already defined\n    LabelUpdate:\n      # Already defined\npaths:\n  # Projects and Sections remain as defined earlier\n\n  # Labels\n  /labels:\n    get:\n      operationId: getLabels\n      summary: Get all labels\n      description: Retrieves a list of all user labels.\n      security:\n        - bearerAuth: []\n      responses:\n        \"200\":\n          description: A JSON array of labels.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Label\"\n        4XX:\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        5XX:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      operationId: createLabel\n      summary: Create a new label\n      description: Creates a new label for the user.\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: Label details to create.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LabelCreate\"\n      responses:\n        \"200\":\n          description: Returns the newly created label.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Label\"\n        4XX:\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        5XX:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /labels/{label_id}:\n    get:\n      operationId: getLabel\n      summary: Get a label\n      description: Retrieves a specific label by its ID.\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: label_id\n          in: path\n          required: true\n          description: The label ID.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returns the requested label object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Label\"\n        4XX:\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        5XX:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      operationId: updateLabel\n      summary: Update a label\n      description: Updates the details of an existing label.\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: label_id\n          in: path\n          required: true\n          description: The label ID.\n          schema:\n            type: string\n      requestBody:\n        description: Fields to update in the label.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/LabelUpdate\"\n      responses:\n        \"200\":\n          description: Returns the updated label object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Label\"\n        4XX:\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        5XX:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      operationId: deleteLabel\n      summary: Delete a label\n      description: Deletes a label by its ID.\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: label_id\n          in: path\n          required: true\n          description: The label ID.\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The label was deleted successfully (no content).\n        4XX:\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        5XX:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  # Comments\n  /comments:\n    get:\n      operationId: getComments\n      summary: Get all comments\n      description: Retrieves a list of all comments, optionally filtered by project or task ID.\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: project_id\n          in: query\n          schema:\n            type: string\n          description: Filter comments by project ID.\n        - name: task_id\n          in: query\n          schema:\n            type: string\n          description: Filter comments by task ID.\n      responses:\n        \"200\":\n          description: A JSON array of comments.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/Comment\"\n        4XX:\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        5XX:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      operationId: createComment\n      summary: Create a new comment\n      description: Adds a comment to a task or project.\n      security:\n        - bearerAuth: []\n      requestBody:\n        description: Comment details to create.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CommentCreate\"\n      responses:\n        \"200\":\n          description: Returns the newly created comment.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comment\"\n        4XX:\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        5XX:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n  /comments/{comment_id}:\n    get:\n      operationId: getComment\n      summary: Get a comment\n      description: Retrieves a specific comment by its ID.\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: comment_id\n          in: path\n          required: true\n          description: The comment ID.\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: Returns the requested comment object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comment\"\n        4XX:\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        5XX:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    post:\n      operationId: updateComment\n      summary: Update a comment\n      description: Updates the content of an existing comment.\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: comment_id\n          in: path\n          required: true\n          description: The comment ID.\n          schema:\n            type: string\n      requestBody:\n        description: Updated comment content.\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CommentUpdate\"\n      responses:\n        \"200\":\n          description: Returns the updated comment object.\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Comment\"\n        4XX:\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        5XX:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n    delete:\n      operationId: deleteComment\n      summary: Delete a comment\n      description: Deletes a comment by its ID.\n      security:\n        - bearerAuth: []\n      parameters:\n        - name: comment_id\n          in: path\n          required: true\n          description: The comment ID.\n          schema:\n            type: string\n      responses:\n        \"204\":\n          description: The comment was deleted successfully (no content).\n        4XX:\n          description: Client error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        5XX:\n          description: Server error\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n```\n\nThis extended specification now includes operations for managing **labels** and **comments**, complete with CRUD operations for each resource."]},"status":"finished_successfully","end_turn":true,"weight":1,"metadata":{"finish_details":{"type":"stop"},"is_complete":true,"citations":[],"content_references":[],"gizmo_id":"g-TYEliDU6A","message_type":null,"model_slug":"gpt-4o","default_model_slug":"o1","parent_id":"aaa2ac5e-6afe-4865-aa96-74e625fee4e0","request_id":"900c2019acc5f852-ORD","timestamp_":"absolute","model_switcher_deny":[{"slug":"text-davinci-002-render-sha","context":"regenerate","reason":"unsupported_gizmo","description":"This GPT is not supported"}]},"recipient":"all","channel":null},"parent":"aaa2ac5e-6afe-4865-aa96-74e625fee4e0","children":[]}},"moderation_results":[],"current_node":"5e003b26-0a61-4386-8fd2-5df211706324","plugin_ids":null,"conversation_id":"67838abe-f730-8002-b53e-34cf39c4ac7f","conversation_template_id":"g-TYEliDU6A","gizmo_id":"g-TYEliDU6A","gizmo_type":"gpt","is_archived":false,"is_starred":null,"safe_urls":["http://api.example.com/v1","http://staging-api.example.com","https://todoist.com/showProject?id=2203306141","https://api.todoist.com/rest/v2","https://todoist.com/showProject?id=220474322","http://commonmark.org/help/"],"default_model_slug":"o1","conversation_origin":null,"voice":null,"async_status":4,"disabled_tool_ids":[]}